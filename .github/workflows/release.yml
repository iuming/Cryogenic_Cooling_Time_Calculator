name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # 匹配版本标签如 v1.0.0
  workflow_dispatch:  # 允许手动触发
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests before release
      run: |
        python scripts/test_components.py

    - name: Generate changelog
      id: changelog
      run: |
        # 生成变更日志
        echo "## 🚀 Release Notes" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### ✨ Features" >> CHANGELOG.md
        echo "- Comprehensive GUI for cryogenic cooling calculations" >> CHANGELOG.md
        echo "- Multi-stage cooling time analysis with heat leak modeling" >> CHANGELOG.md
        echo "- Interactive system schematic diagrams" >> CHANGELOG.md
        echo "- Dual-language support (Chinese/English)" >> CHANGELOG.md
        echo "- Engineering estimates with safety factors" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### 📊 Technical Details" >> CHANGELOG.md
        echo "- Python-based calculation engine using Debye model" >> CHANGELOG.md
        echo "- Tkinter GUI with matplotlib integration" >> CHANGELOG.md
        echo "- Modular code structure for easy maintenance" >> CHANGELOG.md
        echo "- Comprehensive testing and documentation" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### 🔧 System Requirements" >> CHANGELOG.md
        echo "- Python 3.7+" >> CHANGELOG.md
        echo "- numpy, matplotlib libraries" >> CHANGELOG.md
        echo "- tkinter (usually included with Python)" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### 📱 Usage" >> CHANGELOG.md
        echo "1. Download and extract the release" >> CHANGELOG.md
        echo "2. Install dependencies: \`pip install -r requirements.txt\`" >> CHANGELOG.md
        echo "3. Run the application: \`python cooling_gui.py\`" >> CHANGELOG.md
        echo "4. Or double-click \`start_gui.bat\` on Windows" >> CHANGELOG.md

    - name: Create distribution package
      run: |
        # 创建发布包
        mkdir -p dist
        
        # 复制必要文件到发布目录
        cp -r core dist/
        cp -r utils dist/
        cp -r scripts dist/
        cp -r docs dist/
        cp cooling_gui.py dist/
        cp requirements.txt dist/
        cp start_gui.bat dist/
        cp README.md dist/
        cp .gitignore dist/
        
        # 创建发布归档
        cd dist
        tar -czf ../cryogenic-cooling-calculator.tar.gz *
        cd ..
        zip -r cryogenic-cooling-calculator.zip dist/*

    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Cryogenic Cooling Calculator ${{ steps.get_version.outputs.version }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cryogenic-cooling-calculator.tar.gz
        asset_name: cryogenic-cooling-calculator-${{ steps.get_version.outputs.version }}.tar.gz
        asset_content_type: application/gzip

    - name: Upload ZIP Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cryogenic-cooling-calculator.zip
        asset_name: cryogenic-cooling-calculator-${{ steps.get_version.outputs.version }}.zip
        asset_content_type: application/zip

  notify-release:
    name: Notify Release
    needs: create-release
    runs-on: ubuntu-latest
    
    steps:
    - name: Release notification
      run: |
        echo "🎉 Release ${{ steps.get_version.outputs.version }} created successfully!"
        echo "📦 Release assets:"
        echo "   - cryogenic-cooling-calculator-${{ steps.get_version.outputs.version }}.tar.gz"
        echo "   - cryogenic-cooling-calculator-${{ steps.get_version.outputs.version }}.zip"
        echo ""
        echo "🔗 Release URL: ${{ steps.create_release.outputs.html_url }}"
